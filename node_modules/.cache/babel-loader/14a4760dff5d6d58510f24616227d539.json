{"ast":null,"code":"export function getSize(scrollbar) {\n  var containerEl = scrollbar.containerEl,\n      contentEl = scrollbar.contentEl;\n  var containerStyles = getComputedStyle(containerEl);\n  var paddings = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight'].map(function (prop) {\n    return containerStyles[prop] ? parseFloat(containerStyles[prop]) : 0;\n  });\n  var verticalPadding = paddings[0] + paddings[1];\n  var horizontalPadding = paddings[2] + paddings[3];\n  return {\n    container: {\n      // requires `overflow: hidden`\n      width: containerEl.clientWidth,\n      height: containerEl.clientHeight\n    },\n    content: {\n      // border width and paddings should be included\n      width: contentEl.offsetWidth - contentEl.clientWidth + contentEl.scrollWidth + horizontalPadding,\n      height: contentEl.offsetHeight - contentEl.clientHeight + contentEl.scrollHeight + verticalPadding\n    }\n  };\n}","map":{"version":3,"sources":["../src/geometry/get-size.ts"],"names":[],"mappings":"AAEA,OAAM,SAAU,OAAV,CAAkB,SAAlB,EAAwC;AAE1C,MAAA,WAAA,GAAA,SAAA,CAAA,WAAA;AAAA,MACA,SAAA,GAAA,SAAA,CAAA,SADA;AAIF,MAAM,eAAe,GAAG,gBAAgB,CAAC,WAAD,CAAxC;AACA,MAAM,QAAQ,GAAG,CACf,YADe,EAEf,eAFe,EAGf,aAHe,EAIf,cAJe,EAKf,GALe,CAKX,UAAA,IAAA,EAAI;AACR,WAAO,eAAe,CAAC,IAAD,CAAf,GAAwB,UAAU,CAAC,eAAe,CAAC,IAAD,CAAhB,CAAlC,GAA4D,CAAnE;AACD,GAPgB,CAAjB;AAQA,MAAM,eAAe,GAAG,QAAQ,CAAC,CAAD,CAAR,GAAc,QAAQ,CAAC,CAAD,CAA9C;AACA,MAAM,iBAAiB,GAAG,QAAQ,CAAC,CAAD,CAAR,GAAc,QAAQ,CAAC,CAAD,CAAhD;AAEA,SAAO;AACL,IAAA,SAAS,EAAE;AACT;AACA,MAAA,KAAK,EAAE,WAAW,CAAC,WAFV;AAGT,MAAA,MAAM,EAAE,WAAW,CAAC;AAHX,KADN;AAML,IAAA,OAAO,EAAE;AACP;AACA,MAAA,KAAK,EAAE,SAAS,CAAC,WAAV,GAAwB,SAAS,CAAC,WAAlC,GAAgD,SAAS,CAAC,WAA1D,GAAwE,iBAFxE;AAGP,MAAA,MAAM,EAAE,SAAS,CAAC,YAAV,GAAyB,SAAS,CAAC,YAAnC,GAAkD,SAAS,CAAC,YAA5D,GAA2E;AAH5E;AANJ,GAAP;AAYD","sourceRoot":"","sourcesContent":["export function getSize(scrollbar) {\n    var containerEl = scrollbar.containerEl, contentEl = scrollbar.contentEl;\n    var containerStyles = getComputedStyle(containerEl);\n    var paddings = [\n        'paddingTop',\n        'paddingBottom',\n        'paddingLeft',\n        'paddingRight',\n    ].map(function (prop) {\n        return containerStyles[prop] ? parseFloat(containerStyles[prop]) : 0;\n    });\n    var verticalPadding = paddings[0] + paddings[1];\n    var horizontalPadding = paddings[2] + paddings[3];\n    return {\n        container: {\n            // requires `overflow: hidden`\n            width: containerEl.clientWidth,\n            height: containerEl.clientHeight,\n        },\n        content: {\n            // border width and paddings should be included\n            width: contentEl.offsetWidth - contentEl.clientWidth + contentEl.scrollWidth + horizontalPadding,\n            height: contentEl.offsetHeight - contentEl.clientHeight + contentEl.scrollHeight + verticalPadding,\n        },\n    };\n}\n//# sourceMappingURL=get-size.js.map"]},"metadata":{},"sourceType":"module"}