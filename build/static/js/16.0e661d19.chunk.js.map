{"version":3,"sources":["components/Aside.js","pages/Dashboard/docDefinition.js","pages/Dashboard/index.js"],"names":["Wrapper","styled","aside","Items","a","theme","textColor","HovrIcn","div","itemslist","Aside","useState","clicked","setClicked","map","it","idx","href","onClick","docDefinition","details","pageMargins","content","text","style","alignment","table","headerRows","body","slice","filter","detail","result","operator","split","length","toLowerCase","spacer","colParser","defaultStyle","fontSize","styles","header","bold","tableHeader","footer","currentPage","toString","margin","info","title","pdfMake","vfs","pdfFonts","MainSection","Button","button","color","background","width","height","round","border","gap","Small","small","Cards","TopCard","darkTheme","SubCard","Span","span","Ptitle","Psub","ProgressText","sub","useContext","GlobalContext","Details","section","Dtitle","DetailsTable","$scrolling","Trows","tr","Copier","RiFileCopyLine","DownloadBtn","Name","AttentionModalStyles","Info","Blocked","blocked","AttentionModal","setShowPopup","useEscapeKey","dispatch","useDispatch","e","stopPropagation","className","strokeWidth","size","to","type","SHOW_MODAL","payload","toSubmit","Dashboard","setLoginForm","ctn","useSelector","store","auth","user","userInfo","userData","accessToken","refreshToken","copied","setCopied","showPopup","setBlocked","window","innerWidth","setInnerWidth","tScrolling","setTScrolling","useEffect","unblockable","Date","blockDate","watcher","addEventListener","removeEventListener","Promise","all","Fetcher","method","params","id","then","USER","getDashboard","idToSearch","d","requestArray","i","date","months","year","getFullYear","month","getMonth","push","period","encoding","list","reduce","total","detailsFile","parseDetailsFile","decode","file","getDetailsFile","username","CREATE_AUTH","setTimeout","RESET_ACCESSTOKEN","useMemo","rests","owner","undefined","navigator","clipboard","writeText","plan","balance","replacePoints","strokeColor","percent","percentage","VOICE","current","initial","format","gapDegree","INTERNET","SMS_MMS","disabled","createPdf","open","onScroll","target","scrollTop","index","parseCols","Preloader"],"mappings":"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","file":"static/js/16.0e661d19.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components/macro\";\n\nconst Wrapper = styled.aside`\n    font-size: 22px;\n    font-weight: 600;\n    display: flex;\n    flex-direction: column;\n    line-height: 30px;\n    gap: 10px;\n    height: fit-content;\n    position: sticky;\n    top: 50px;\n    @media(max-width: 1300px) {\n        display: none;\n    }\n`;\nconst Items = styled.a`\n    text-decoration: none;\n    color: ${({theme}) => theme.textColor};\n    position: relative;\n    padding-left: 13px;\n`\nconst HovrIcn = styled.div`\n    background: #4B75FC;\n    width: 15px;\n    height: 3px;\n    position: absolute;\n    left: -10px;\n    top: 50%;\n    border-radius: 1.5px;\n`\nconst itemslist = [\n    \"Мой тариф\",\n    \"Услуги\",\n    \"Роуминг\",\n    \"Группы\",\n    \"Детализация\",\n];\nexport default function Aside() {\n    const [clicked, setClicked] = useState(0);\n    return (\n        <Wrapper>\n            {itemslist.map((it, idx) =>\n                <Items key={it} href={`#${it}`} onClick={()=>setClicked(idx)}>\n                    {clicked === idx && <HovrIcn />}\n                    {it}\n                </Items>\n            )}\n        </Wrapper>\n    )\n}\n","import { spacer } from \"../../components/BuyNumberModal\";\n// import logo2 from '../../assets/images/logo2.svg'\n\nconst colParser = (detail) => {\n    let result = [\n        `${detail[\"Дата звонка\"]}  /  ${detail[\"Время звонка\"]}`,\n    ]\n    if(detail[\"Тип звонка\"] === \"GPRS\"){\n        result = [...result,  `Интернет (${detail[\"Интернет МБ\"]} мб.)`, \"Beeline\", {text: \"--\", alignment: \"center\"}]\n    } \n    else if(detail[\"Тип звонка\"] === \"SMS / MMS\") {\n        let operator = detail[\"Описание звонка\"].split(\" \");\n        operator = operator[operator.length - 1].toLowerCase();\n        result = [...result,  `SMS / MMS (${spacer(detail[\"Входящий номер\"])})`, operator, {text: \"--\", alignment: \"center\"}]\n    } \n    else if(detail[\"Тип звонка\"] === \"Местные звонки\") {\n        let operator = detail[\"Описание звонка\"].split(\"\\\"\");\n        operator = operator[operator.length - 1] ? operator[operator.length - 1].toLowerCase() : operator[operator.length - 2].toLowerCase();\n        result = [...result,  `Звонок (${\"+7 \" + spacer(detail[\"Входящий номер\"])})`, operator, \n        {text: `${detail[\"Продолжительность звонка\"]}`, alignment: \"center\"}]\n    }\n    return result\n}\n\n// const reader = new FileReader();\n\nconst docDefinition = (details) => ({\n    pageMargins: [ 40, 30 ],\n    // header: {\n    //     image: reader.readAsDataURL(logo2),\n    //     width: 30,\n    // },\n    content: [\n        {text: \"Ваша детализация\\n\\n\", style: \"header\", alignment: \"center\"},\n        {\n            table: {\n                headerRows: 1,\n                body: [\n                    [ {text: 'Дата', style: \"tableHeader\"}, {text: 'Действие', style: \"tableHeader\"}, {text: 'Оператор', style: \"tableHeader\"}, {text: 'Длительность', style: \"tableHeader\"} ],\n                    ...details.slice(0, 2000).filter(detail => detail[\"Продолжительность звонка\"]).map(detail => colParser(detail))\n                ]\n            }\n        }\n    ],\n    defaultStyle: {\n        fontSize: 16,\n    },\n    styles: {\n        header: {\n            fontSize: 25,\n            bold: true\n        },\n        tableHeader: {\n            bold: true,\n            fontSize: 12,\n        },\n    },\n    footer: (currentPage) =>  ({ text: currentPage.toString(), alignment: 'left', fontSize: 11, margin: [40, 0] }),\n    info: {\n        title: 'Детализация | Boom Telecom',\n    },\n})\n\nexport default docDefinition;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { GlobalContext } from \"../../App\";\nimport Aside from \"../../components/Aside\";\nimport { Progress } from 'antd'\nimport { HiDownload } from \"react-icons/hi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {CREATE_AUTH, Fetcher, parseCols, parseDetailsFile, percentage, replacePoints, RESET_ACCESSTOKEN, SHOW_MODAL, USER } from \"../../globals/utils\";\nimport { spacer } from \"../../components/BuyNumberModal\";\nimport { RiFileCopyLine } from \"react-icons/ri\";\nimport { useEscapeKey } from \"../../hooks\";\nimport { decode } from 'js-base64';\nimport { Close } from \"../../globals/LoginForm\";\nimport { CgClose } from \"react-icons/cg\";\nimport { GiHazardSign } from \"react-icons/gi\";\nimport { Link } from \"react-router-dom\";\nimport sub from 'date-fns/sub'\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\nimport docDefinition from \"./docDefinition\";\nimport Preloader from \"../../globals/Preloader/Preloader\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst Wrapper = styled.div`\n    padding-top: 50px;\n    display: flex;\n    gap: 0px 100px;\n    width: 100%;\n    @media(max-width: 1400px) {\n        gap: 0px;\n    }\n`;\nconst MainSection = styled.div`\n    padding-right: 100px;\n    width: 100%;\n    row-gap: 20px;\n    display: flex;\n    height: fit-content;\n    flex-direction: column;\n    @media(max-width: 1400px) {\n        padding: 0 2vw;\n    }\n`;\nconst Button = styled.button`\n    color: ${({color}) => color ? color : \"#121212\"};\n    background: ${({background}) => background};\n    font-size: ${({fontSize}) => fontSize};\n    font-weight: 500;\n    width: ${({width}) => width};\n    height: ${({height}) => height};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: ${({round, height}) => round && height};\n    border: ${({border}) => border ? border : \"none\"};\n    cursor: pointer;\n    line-height: ${({fontSize}) => fontSize};\n    gap: ${({gap}) => gap};\n    max-width: 100%;\n    max-height: fit-content;\n    padding: 20px 16px;\n    outline: none;\n    @media(max-width: 900px) {\n        font-size: 16px;\n        height: fit-content;\n    }\n    @media(max-width: 550px) { \n        order: 2;\n    }\n`;\n\nconst Small = styled.small`\n    font-size: 16px;\n    line-height: 50%;\n    font-weight: 700;\n    @media(max-width: 900px) and (min-width: 550px) {\n        font-size: 12px;\n    }\n    @media(max-width: 550px) {\n        font-size: 17px;\n    }\n`;\nconst Cards = styled.div`\n    display: grid;\n    gap: 12px 20px;\n    width: 100%;\n    grid-template-columns: repeat(3, 1fr);\n    font-family: Circe;\n    @media(max-width: 550px) {\n        grid-template-columns: 1fr;\n    }\n    #Абонентская_плата {\n        font-size: 24px;\n        height: 71px;\n        width: 100%;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        border-radius: 71px;\n        font-weight: 700;\n        @media(max-width: 900px) and (min-width: 550px) {\n            font-size: 16px;\n        }\n        @media(max-width: 550px) { \n            order: 2;\n            font-size: 16px;\n        }\n    }\n`\nconst TopCard = styled.div` \n    width: 100%;\n    height: 123px;\n   \n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    background: ${({darkTheme}) => darkTheme ? \"rgba(255, 255, 255, 0.09)\" : \"#FFFFFF\"};\n    border-radius: 12px;\n    padding: 20px;\n    @media(max-width: 900px) and (min-width: 550px) {\n        \n        padding: 12px;\n        :first-child {\n            min-width: max-content;\n        }\n    }\n    @media(max-width: 600px) {\n        padding: 10px 12px;\n        \n    }\n    .topCardTitle {\n        font-size: 20px;\n        color: ${({darkTheme}) => darkTheme ? \"#FFFFFFAD\" : \"#010101AD\"};\n        @media(max-width: 963px) {\n            font-size: 12px;\n        }\n    }\n    .topCardBody {\n        word-wrap: none;\n        white-space: nowrap;\n        font-size: 24px;\n        color: ${({color}) => color};\n        display: flex;\n        align-items: center;\n        gap: 11px;\n        font-weight: bold;\n        @media(max-width: 900px) and (min-width: 550px) {\n            font-size: 16px;\n        }\n    }\n`;\nconst SubCard = styled(TopCard)`\n    align-items: center;\n    margin: 0;\n    padding: 24px;\n    height: 266px;\n    gap: 20px;\n    @media(max-width: 900px) {\n        height: fit-content;\n    }\n    @media(max-width: 550px) { \n        order: 3;\n    }\n`\nconst Span = styled.span`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: ${({theme}) => theme.textColor};\n    gap: 4px;\n`\nconst Ptitle = styled.span`\n    font-size: 28px;\n    font-weight: 700;\n    @media(max-width: 900px) and (min-width: 550px) {\n        font-size: 16px;\n    }\n`\nconst Psub = styled.span`\n    font-size: 20px;\n    color: ${({darkTheme}) => darkTheme ? \"rgba(255, 255, 255, 0.6)\" : 'rgba(18,18,18, 0.6)'};\n    @media(max-width: 900px) and (min-width: 550px) {\n        font-size: 12px;\n    }\n`\nconst ProgressText = ({title, sub}) => {\n    const {darkTheme} = useContext(GlobalContext);\n    return (\n    <Span>\n        <Ptitle>{title}</Ptitle>\n        <Psub darkTheme={darkTheme}>{sub}</Psub>\n    </Span>)\n}\nconst Details = styled.section`\n    display: flex;\n    flex-direction: column;\n    height: fit-content;\n    color: ${({theme}) => theme.textColor};\n    background: ${({darkTheme}) => darkTheme ? \"rgba(255, 255, 255, 0.09)\" : \"#FFFFFF\"};\n    border-radius: 28px;\n    padding: 25px 16px 16px;\n    gap: 26px;\n    #wrapTable {\n        overflow: auto;\n        max-height: 550px;\n        z-index: 2;\n        ::-webkit-scrollbar {\n            width: 5px;\n            height: 5px;\n            z-index: 2;\n        }\n        ::-webkit-scrollbar-track {\n            background-color: transparent;\n        }\n\n        ::-webkit-scrollbar-thumb {\n            background-color: grey;\n            border-radius: 5px;\n            outline: none;\n        }\n    }\n    @media(max-width: 900px) {\n        padding: 25px 23px;\n        padding-right: 0;\n    }\n    @media(max-width: 550px) {\n        padding: 24px 0 24px 12px;\n    }\n`\nconst Dtitle = styled.span`\n    display: flex;\n    justify-content: space-between;\n    font-size: 40px;\n    line-height: 40px;\n    font-weight: 650;\n    gap: 20px;\n    flex-wrap: wrap;\n    @media(max-width: 900px) {\n        padding-right: 23px;\n    }\n    @media(max-width: 550px) {\n        font-size: 30px;\n        padding-right: 10px;\n    }\n`\nconst DetailsTable = styled.table`\n    width: 100%;\n    min-width: 1000px;\n    font-size: 24px;\n    text-align: left;\n    border-collapse: separate;\n    border-spacing: 0px 12px;\n    position: relative;\n    padding: 0;\n    z-index: 1;\n    thead tr {\n        font-size: 16px;\n        line-height: 100%;\n        font-weight: 550;\n        & th {\n            background: ${({theme}) => theme.darkTheme ? \"rgb(24 24 24)\" : \"#FFFFFF\"};\n            position: sticky;\n            top: 0;\n            padding-left: 24px;\n            padding-top: ${({$scrolling}) => $scrolling && \"12px\"};\n            padding-bottom: ${({$scrolling}) => $scrolling && \"12px\"};\n            @media(max-width: 500px) {\n                top: 0;\n            }\n        }\n    }\n\n    tbody tr td:first-child span{\n        margin: 0 5px 0 8px;\n    }\n    @media(max-width: 900px) {\n        padding-right: 23px;\n    }\n    @media(max-width: 550px) {\n        padding-right: 12px;\n    }\n`\nconst Trows = styled.tr`\n    font-family: \"Roboto Mono\";\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 16px;\n    text-align: left;\n    background: ${({darkTheme}) => darkTheme ? \"#242424\" : \"#EBEBEB\"};\n    & td {\n        padding: 28px 24px;\n        line-height: 100%;\n    }\n    & td:first-child {\n        border-radius: 18px 0 0 18px;\n    }\n    & td:last-child {\n        border-radius: 0 18px 18px 0;\n    }\n    & img{\n        width: 30px;\n        margin: -10px 3px -7px 0;\n    }\n`\nconst Copier = styled(RiFileCopyLine)`\n    cursor: pointer;\n    &:hover {\n        transform: scale(1.04);\n    }\n`\n\nconst DownloadBtn = styled.button`\n    width: fit-content;\n    height: 52px;\n    max-width: 100%;\n    max-height: fit-content;\n    padding: 12px 24px 16px 24px;\n    background: #4B75FC1F;\n    color: #4B75FC;\n    font-size: 24px;\n    border: none;\n    border-radius: 69px;\n    line-height: 24px;\n    cursor: pointer;\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n    text-align: center;\n    font-family: \"Jost\", \"Circe\";\n    svg {\n        width: 20px;\n        height: 20px;\n    }\n    @media(max-width: 720px) {\n        padding: 10px 10px 16px 10px;\n        font-size: 16px;\n        line-height: 16px;\n        width: fit-content;\n        height: fit-content;\n        \n    }\n    :disabled {\n        cursor: not-allowed;\n    }\n`\nconst Name = styled.div`\n    font-weight: 700;\n    font-size: 44px;\n    color: inherit;\n    line-height: 100%;\n    @media(max-width: 1280px) {\n        font-size: 32px;\n    }\n    @media(max-width: 600px) {\n        font-size: 20px;\n    }\n`\nconst AttentionModalStyles = styled.div`\n    background: ${({theme}) => theme.darkTheme ? \"rgba(255, 255, 255, 0.5)\" : \"rgba(0, 0, 0, 0.7)\"};\n    width: 100%;\n    min-height: 100vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 100;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #010101;\n    .modal {\n        width: 320px;\n        height: 271px;\n        max-width: 90vw;\n        background: #fff;\n        border-radius: 24px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n        position: relative;\n        padding: 30px 12px 0;\n    }\n    .header {\n        font-weight: 500;\n        font-size: 32px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 5px;\n        svg {\n            color: #FF0202;\n        }\n    }\n\n    .body {\n        margin: 9px 0 20px;\n        font-weight: 500;\n        font-size: 20px;\n        a {\n            text-decoration: underline;\n            color: #4B75FC;\n        }\n    }\n    .bottom {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 21px;\n        font-size: 20px;\n        .left {\n            color: #4B75FC;\n        }\n        .right {\n            color: #FF0202;\n            background: #FF02021F;\n            padding: 5px 10px;\n            border-radius: 35px;\n        }\n    }\n`\n\nconst Info = styled.div`\n    display: flex;\n    gap: 8px;\n    align-items: center;\n    flex-wrap: wrap;\n`\n\nconst Blocked = styled.span`\n    width: fit-content;\n    padding: 8px 20px;\n    color: #fff;\n    background: ${({blocked}) => blocked ? \"#FF0202\" : \"#32A43E\"};\n    border-radius: 50px;\n    font-family: Circe;\n    font-size: 28px;\n    font-weight: 400;\n    @media(max-width: 1400px) {\n        font-size: 16px;\n    }\n    @media(max-width: 600px) {\n        padding: 4px 12px;\n        font-size: 12px;\n        font-family: Circe;\n        line-height: 18px;\n    }\n    @media(max-width: 400px) {\n        font-size: 16px;\n        line-height: 24px;\n    }\n`\n\nconst AttentionModal = ({setShowPopup}) => {\n    useEscapeKey(setShowPopup);\n    const dispatch = useDispatch();\n    return (\n        <AttentionModalStyles onClick={(e) => {e.stopPropagation(); setShowPopup(false)}}>\n            <div onClick={(e) => e.stopPropagation()} className=\"modal\">\n                <Close onClick={()=>setShowPopup(false)}><CgClose strokeWidth={1.5} size={29} /></Close>\n                <span className=\"header\">\n                    <GiHazardSign />\n                    Внимание\n                </span>\n                <span className=\"body\">\n                    только при наличии \n                    неиспользованной пластиковой \n                    сим-карты или <Link to=\"/numbers/:esim\">eSIM</Link>\n                </span>\n\n                <span className=\"bottom\">\n                    <span onClick={()=>{\n                        setShowPopup(false); \n                        dispatch({type: SHOW_MODAL, payload: {toSubmit: true}})\n                    }} className=\"left\">Хорошо</span>\n                    <span onClick={()=>setShowPopup(false)} className=\"right\">Отмена</span>\n                </span>\n            </div>\n        </AttentionModalStyles>\n    )\n}\n\n\nconst getDetailsFile = (idToSearch, accessToken) => {\n    const d = new Date();\n    const requestArray = [];\n    for(let i = 0; i <= 6; i++) {\n        const date = sub(d, {months: i});\n        const year = date.getFullYear();\n        let month = 1+date.getMonth();\n        month = month < 10 ? \"0\"+month : month;\n        requestArray.push(\n            Fetcher({method: \"getDetailsFile\", params:{idToSearch, period: `${year}M${month}`, encoding: \"utf-8\",}, id:null}, {accessToken})\n        )\n    }\n\n    return Promise.all(requestArray)\n    .then(list => list.reduce((total, detailsFile) => [\n            ...total, \n            ...parseDetailsFile(decode(detailsFile.file))\n        ], [])\n    )\n}\n\nconst getDashboard = (ctn, accessToken, dispatch) => { \n    Promise.all([\n        Fetcher({method: \"getCtnInfo\", params:{ctn}, id:null}),\n        Fetcher({method: \"getCustomerData\", params:{id: ctn}, id:null}, {accessToken}),\n    ])\n    .then(([userInfo, userData]) => dispatch({type: USER, user: {userInfo, userData}}))\n}\n\n\nexport default function Dashboard() {\n    const {darkTheme, setLoginForm, ctn} = useContext(GlobalContext);\n    const {userInfo, userData, details} = useSelector(store => store.auth.user);\n    const {accessToken, refreshToken} = useSelector(store => store.auth);\n    const dispatch = useDispatch();\n    const [copied, setCopied] = useState(false);\n    const [showPopup, setShowPopup] = useState(false);\n    const [blocked, setBlocked] = useState();\n    const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n    const [tScrolling, setTScrolling] = useState(false);\n    \n    useEffect(() => {\n        userInfo && setBlocked( !(userInfo.unblockable || new Date(userInfo.blockDate) > new Date()) );\n    }, [userInfo, setBlocked])\n\n    useEffect(() => {\n        const watcher = () => setInnerWidth(window.innerWidth);\n        window.addEventListener(\"resize\", watcher)\n        return () => window.removeEventListener(\"resize\", watcher)\n    }, [])\n    \n    useEffect(() => {\n        if (accessToken) {\n            getDashboard(ctn, accessToken, dispatch)\n            getDetailsFile(ctn, accessToken).then(details =>  dispatch({type: USER, user: {details}}))\n        } \n        else if(refreshToken) {\n            Fetcher({method: \"refreshToken\", params:{username: ctn, refreshToken}, id:null})\n                .then(result => {\n                    const {accessToken, refreshToken} = result;\n                    dispatch({type: CREATE_AUTH, payload: {accessToken, refreshToken}})\n                    setTimeout(() => dispatch({type: RESET_ACCESSTOKEN}), 600000);\n                })\n        } \n        else setLoginForm(true)\n    }, [accessToken, refreshToken, dispatch, setLoginForm, ctn]);\n\n    const handleDownload = () => {\n        pdfMake.createPdf(docDefinition(details)).open();\n    }\n    \n    const handleCopy = () => {\n        navigator.clipboard.writeText(\"+7\"+userInfo.ctn).then(() => {\n            setCopied(true);\n            setTimeout(() => setCopied(false), 1000);\n        });\n    }\n\n    const width = useMemo(() => innerWidth >= 550 && innerWidth <= 900 ? 0.266*innerWidth - 48 : 181, [innerWidth]);\n    const rests = useMemo(() => userInfo && userInfo.rests, [userInfo])\n    \n    return (\n            <>\n            {!userInfo ? <Preloader /> : \n            <Wrapper id=\"Мой тариф\">\n                <Aside />\n                <MainSection>\n                    <Info>\n                        <Name>{userData.owner}</Name>\n                        {blocked === undefined || <Blocked  blocked={blocked}>{blocked ? \"Заблокирован\" : \"Активен\"}</Blocked>}\n                    </Info>\n                    <Cards>\n                        <TopCard darkTheme={darkTheme}>\n                            <span className=\"topCardTitle\">Номер:</span>\n                            <span className=\"topCardBody\">\n                                {\"+7 \"+spacer(userInfo.ctn)}\n                                {innerWidth >= 900 && <Copier onClick={handleCopy} color={copied ? \"#4B75FC\" : darkTheme ? \"#fff\" : \"#010101AD\"} size={23} />}\n                            </span>\n                        </TopCard>\n                        <TopCard color=\"#4B75FC\" darkTheme={darkTheme}>\n                            <span className=\"topCardTitle\">Тариф:</span>\n                            <span className=\"topCardBody\">\n                                {userInfo.plan + \" ₽\"}\n                            </span>\n                        </TopCard>\n                        <TopCard color={userInfo.balance <= 0 ? \"#FF0202\" : \"#32A43E\"} darkTheme={darkTheme}>\n                            <span className=\"topCardTitle\">Баланс:</span>\n                            <span className=\"topCardBody\">\n                                {replacePoints(userInfo.balance)+ \" ₽\"}\n                            </span>\n                        </TopCard>\n\n                        <SubCard darkTheme={darkTheme}>\n                            <Small>Минуты</Small>\n                            <Progress strokeColor=\"#4B75FC\" strokeWidth={7} width={width} type=\"dashboard\" percent={percentage(rests.VOICE.current, rests.VOICE.initial)} format={() => <ProgressText title={`${rests.VOICE.current} мин`} sub={`из ${rests.VOICE.initial}`} /> } gapDegree={60} />\n                        </SubCard>\n                        <SubCard darkTheme={darkTheme}>\n                            <Small>Интернет</Small>\n                            <Progress strokeColor=\"#4B75FC\" strokeWidth={7} width={width} type=\"dashboard\" percent={percentage(rests.INTERNET.current, rests.INTERNET.initial)} format={() => <ProgressText title={`${replacePoints(rests.INTERNET.current)} гб.`} sub={`из ${rests.INTERNET.initial}`} /> } gapDegree={60} />\n                        </SubCard>\n                        <SubCard darkTheme={darkTheme}>\n                            <Small>Сообщения</Small>\n                            <Progress strokeColor=\"#4B75FC\" strokeWidth={7} width={width} type=\"dashboard\" percent={percentage(rests.SMS_MMS.current, rests.SMS_MMS.initial)} format={() => <ProgressText title={`${rests.SMS_MMS.current} SMS`} sub={`из ${rests.SMS_MMS.initial}`} /> } gapDegree={60} />\n                        </SubCard>\n                        <Button onClick={() => setShowPopup(true)} fontSize=\"24px\" color=\"#4B75FC\" background=\"#4B75FC29\" height=\"71px\" width=\"100%\" round>\n                            Изменить номер\n                            {showPopup && <AttentionModal setShowPopup={setShowPopup} />}\n                        </Button>\n                        <Button fontSize=\"24px\" color=\"white\" background=\"#4B75FC\" height=\"71px\" width=\"100%\" round>Сменить тариф</Button>\n                        {/* <span id=\"Абонентская_плата\">Абонентская плата в месяц: </span> */}\n                    </Cards>\n                    <Details id=\"Детализация\" darkTheme={darkTheme}>\n                        <Dtitle>\n                            Детализация\n                            <DownloadBtn disabled={!details} onClick={handleDownload}> <HiDownload /> получите полную детализацию</DownloadBtn>\n                        </Dtitle>\n\n                        <div onScroll={({target}) => setTScrolling(target.scrollTop > 0)} id=\"wrapTable\">\n                            {!details ? <Preloader /> :\n                             <DetailsTable $scrolling={tScrolling}>\n                                <thead>\n                                    <tr>\n                                        <th>Дата</th>\n                                        <th>Действие</th>\n                                        <th>Оператор</th>\n                                        <th>Длительность</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {details.slice(0, 2000).filter(detail => detail[\"Продолжительность звонка\"]).map((detail, index) => (\n                                        <Trows key={index} darkTheme={darkTheme}>\n                                            <td>{detail[\"Дата звонка\"]} <span>/</span> {detail[\"Время звонка\"]}</td>\n                                            {parseCols(detail)}\n                                            <td>{detail[\"Продолжительность звонка\"]}</td>\n                                        </Trows>\n                                    ))}\n                                </tbody>\n                            </DetailsTable>}\n                        </div>\n                    </Details>\n                </MainSection>\n            </Wrapper>}\n            </>\n    )\n}\n"],"sourceRoot":""}